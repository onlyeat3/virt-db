on: [ push ]

name: BuildLinux

jobs:
  build:
    name: Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
#          - aarch64-linux-musl
#          - aarch64_be-linux-musl
#          - arm-linux-musleabi
#          - arm-linux-musleabihf
#          - armeb-linux-musleabi
#          - armeb-linux-musleabihf
#          - armel-linux-musleabi
#          - armel-linux-musleabihf
#          - armv5l-linux-musleabi
#          - armv5l-linux-musleabihf
#          - armv6-linux-musleabi
#          - armv6-linux-musleabihf
#          - armv7l-linux-musleabihf
#          - armv7m-linux-musleabi
#          - armv7r-linux-musleabihf
#          - i486-linux-musl
#          - i686-linux-musl
#          - m68k-linux-musl
#          - mips-linux-musl
#          - mips-linux-musln32sf
#          - mips-linux-muslsf
#          - mips64-linux-musl
#          - mips64-linux-musln32
#          - mips64-linux-musln32sf
#          - mips64el-linux-musl
#          - mips64el-linux-musln32
#          - mips64el-linux-musln32sf
#          - mipsel-linux-musl
#          - mipsel-linux-musln32
#          - mipsel-linux-musln32sf
#          - mipsel-linux-muslsf
#          - powerpc-linux-musl
#          - powerpc-linux-muslsf
#          - powerpc64-linux-musl
#          - powerpc64le-linux-musl
#          - powerpcle-linux-musl
#          - powerpcle-linux-muslsf
#          - riscv32-linux-musl
#          - riscv64-linux-musl
#          - s390x-linux-musl
#          - x86_64-linux-musl
#          - x86_64-linux-muslx32
        version:
          - nightly
    steps:
      - uses: actions/checkout@v2
      - name: Install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{matrix.version}}
          target: ${{ matrix.target }}
          override: true
      - name: workaround MSRV issues
        run: |
          cargo update -p=zstd-sys --precise=2.0.1+zstd.1.5.2
      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v1.2.0

      - name: Build Linux
        uses: jean-dfinity/rust-musl-action@master
        with:
          args: rustup default nightly && rustup target add ${{ matrix.target }} && cargo +nightly build --target=${{ matrix.target }} --release

      - name: Zip the Build
        run: |
          pwd
          ls -al target
          ls -al target/${{matrix.target}}
          file target/${{matrix.target}}/release/admin
          file target/${{matrix.target}}/release/server
          
          cd target/${{matrix.target}}/release
          ls -al
          sudo zip -r ${{ matrix.target }}.zip admin* server* -x admin.d -x admin.pdb -x server.d -x server.pdb

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}.zip
          path: |
            ./target/${{matrix.target}}/release/*.exe

      - name: Clear the cargo caches
        run: |
          cargo install cargo-cache --version 0.8.2 --no-default-features --features ci-autoclean
          cargo-cache
