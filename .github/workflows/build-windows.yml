on: [ push ]

name: BuildWindows

jobs:
  build:
    name: x86_64-pc-windows-msvc
    runs-on: windows-2022
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-msvc
        version:
          - nightly
    steps:
      - uses: actions/checkout@v2
      # install OpenSSL on Windows
      # TODO: GitHub actions docs state that OpenSSL is
      # already installed on these Windows machines somewhere
      - name: Set vcpkg root
        if: matrix.target == 'x86_64-pc-windows-msvc'
        run: echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
      - name: Install OpenSSL
        if: matrix.target == 'x86_64-pc-windows-msvc'
        run: vcpkg install openssl:x64-windows

      - name: Install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{matrix.version}}
          target: ${{ matrix.target }}
          override: true
      - name: workaround MSRV issues
        if: matrix.version != 'stable'
        run: |
          cargo update -p=zstd-sys --precise=2.0.1+zstd.1.5.2
      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v1.2.0

      - name: Build
        run: |
          cargo +nightly build --target=${{ matrix.target }} --release

      - name: Show Artifacts
        run: |
          pwd
          ls target
          ls target/${{matrix.target}}/release
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}.zip
          path: |
          ./target/${{matrix.target}}/release/admin.exe
      - name: Clear the cargo caches
        run: |
          cargo install cargo-cache --version 0.8.2 --no-default-features --features ci-autoclean
          cargo-cache
