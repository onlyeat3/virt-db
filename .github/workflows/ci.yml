on: [push]

name: Build

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
#          - i686-pc-windows-gnu
#          - i686-unknown-linux-gnu
#          - x86_64-apple-darwin
#          - x86_64-pc-windows-gnu
#          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.target }}
          override: true
      - name: Install x86 Build Dependencies
        if: ${{ matrix.target == 'i686-pc-windows-gnu' || matrix.target == 'i686-unknown-linux-gnu' }}
        run: sudo dpkg --add-architecture i386 && sudo apt-get update && sudo apt-get install libssl-dev:i386 clang
      - name: Install x86_64 Build Dependencies
        if: ${{ matrix.target != 'i686-pc-windows-gnu' && matrix.target != 'i686-unknown-linux-gnu' }}
        run: |
          sudo apt-get update && sudo apt-get install pkg-config libssl-dev clang
          ls -al /usr/lib
          ls -al /usr/lib/x86_64-unknown-linux-gnu
      - name: Build x86
        uses: actions-rs/cargo@v1
        if: ${{ matrix.target == 'i686-pc-windows-gnu' || matrix.target == 'i686-unknown-linux-gnu' }}
        env:
          TARGET_CC: clang
          OPENSSL_LIB_DIR: /usr/lib/i386-linux-gnu/
          OPENSSL_INCLUDE_DIR: /usr/include/openssl/
        with:
          command: build
          args: --release --target=${{ matrix.target }}
      - name: Build x86_64
        uses: actions-rs/cargo@v1
        if: ${{ matrix.target != 'i686-pc-windows-gnu' && matrix.target != 'i686-unknown-linux-gnu' }}
        env:
          TARGET_CC: clang
          OPENSSL_LIB_DIR: /usr/lib/x86_64-linux-gnu/
          OPENSSL_INCLUDE_DIR: /usr/include/openssl/
        with:
          command: build
          args: --release --target=${{ matrix.target }}